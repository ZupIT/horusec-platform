# Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: release-beta

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type: M (Major); m (Minor); p (Path)'
        required: true

permissions: read-all
jobs:
  ReleaseBeta:
    permissions:
      contents: write
      packages: write
      issues:   write
    env:
      COSIGN_KEY_LOCATION: /tmp/cosign.key
      COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
    runs-on: ubuntu-latest
    if: contains('["wiliansilvazup","matheusalcantarazup","lucasbrunozup","nathanmartinszup","iancardosozup","oliveirafelipezup"]', github.actor)
    steps:
      - name: Set up nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Cosign Installer
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.2.0'

      - name: Install Mage
        run: |
          cd deployments/mage/ && go run mage.go -compile ../../mage

      - name: Git config
        run: |
          ./mage -v defaultGitConfig

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Install cosign private key
        run: |
          ./mage -v writeCosignKeyToFile
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}

      - name: Version increment
        id: updated-version
        run: |
          ./mage -v upVersions ${{ github.event.inputs.releaseType }}
        env:
          HORUSEC_REPOSITORY_ORG: ${{ github.repository_owner }}
          HORUSEC_REPOSITORY_NAME: ${{ github.event.repository.name }}

      - name: Checkout release candidate branch
        run: |
          ./mage -v checkoutReleaseBranch ${{ steps.updated-version.outputs.nextReleaseBranchName }}

      - name: Create and push tag
        run: ./mage -v createAndPushTag ${{ steps.updated-version.outputs.nextBetaVersion }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
          GORELEASER_CURRENT_TAG: ${{ steps.updated-version.outputs.nextBetaVersion }}
          GORELEASER_PREVIOUS_TAG: ${{ steps.updated-version.outputs.actualBetaVersion }}

      - name: Push go projects to dockerhub
        if: ${{ success() }}
        run: |
          ./mage -v dockerPushPlatformGoProjects ${{ steps.updated-version.outputs.nextBetaVersion }}

      - name: Sign go projects in dockerhub
        env:
          COSIGN_KEY: ${{secrets.COSIGN_KEY}}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PWD }}
        run: |
          ./mage -v dockerSignPlatformGoProjects ${{ steps.updated-version.outputs.nextBetaVersion }}

      - name: "Docker meta"
        if: ${{ success() }}
        uses: docker/metadata-action@v3
        id: meta
        env:
          RELEASE_VERSION: ${{ steps.updated-version.outputs.nextBetaVersion }}
        with:
          images: |
            horuszup/horusec-manager
          tags: |
            type=semver,prefix=v,pattern={{version}},value=${{ env.RELEASE_VERSION }}
            type=semver,prefix=v,pattern={{major}}.{{minor}},value=${{ env.RELEASE_VERSION }}
            type=semver,prefix=v,pattern={{major}},value=${{ env.RELEASE_VERSION }}

      - name: "Build and push manager"
        if: ${{ success() }}
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./manager
          file: ./manager/deployments/dockerfiles/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign image
        if: ${{ success() }}
        run: |
          cosign sign -key $COSIGN_KEY_LOCATION horuszup/horusec-manager:${{ steps.updated-version.outputs.nextBetaVersion }}
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PWD }}

      - name: Push updates
        if: ${{ success() }}
        run: ./mage -v gitPushAll

      - name: Remove updates
        if: ${{ !success() }}
        run: ./mage -v removeTag ${{ steps.updated-version.outputs.nextBetaVersion }}
