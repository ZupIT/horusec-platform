// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Horusec",
            "url": "https://github.com/ZupIT/horusec-platform",
            "email": "horusec@zup.com.br"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/analysis": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Start new analysis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analysis"
                ],
                "operationId": "start-new-analysis",
                "parameters": [
                    {
                        "description": "send new analysis info",
                        "name": "SendNewAnalysis",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cli.AnalysisData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "BAD REQUEST",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "INTERNAL SERVER ERROR",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/analysis/{analysisID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get analysis on database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analysis"
                ],
                "operationId": "get-one-analysis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "analysisID of the analysis",
                        "name": "analysisID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "$ref": "#/definitions/analysis.Analysis"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "BAD REQUEST",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "NOT FOUND",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "INTERNAL SERVER ERROR",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "description": "Check if Health of service it's OK!",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "operationId": "health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "INTERNAL SERVER ERROR",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entities.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "analysis.Analysis": {
            "type": "object",
            "properties": {
                "analysisVulnerabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/analysis.AnalysisVulnerabilities"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "errors": {
                    "type": "string"
                },
                "finishedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "repositoryID": {
                    "type": "string"
                },
                "repositoryName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "workspaceID": {
                    "type": "string"
                },
                "workspaceName": {
                    "type": "string"
                }
            }
        },
        "analysis.AnalysisVulnerabilities": {
            "type": "object",
            "properties": {
                "analysisID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "vulnerabilities": {
                    "$ref": "#/definitions/vulnerability.Vulnerability"
                },
                "vulnerabilityID": {
                    "type": "string"
                }
            }
        },
        "cli.AnalysisData": {
            "type": "object",
            "properties": {
                "analysis": {
                    "$ref": "#/definitions/analysis.Analysis"
                },
                "repositoryName": {
                    "type": "string"
                }
            }
        },
        "entities.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "content": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "vulnerability.Vulnerability": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "column": {
                    "type": "string"
                },
                "commitAuthor": {
                    "type": "string"
                },
                "commitDate": {
                    "type": "string"
                },
                "commitEmail": {
                    "type": "string"
                },
                "commitHash": {
                    "type": "string"
                },
                "commitMessage": {
                    "type": "string"
                },
                "confidence": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "line": {
                    "type": "string"
                },
                "securityTool": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vulnHash": {
                    "type": "string"
                },
                "vulnerabilityID": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Horusec-Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Horusec-API",
	Description: "Service responsible for workspace, repositories and token operations.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
