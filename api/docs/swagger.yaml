# Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

definitions:
  analysis.Analysis:
    properties:
      analysisVulnerabilities:
        items:
          $ref: '#/definitions/analysis.AnalysisVulnerabilities'
        type: array
      createdAt:
        example: "2021-12-30T23:59:59Z"
        type: string
      errors:
        type: string
      finishedAt:
        example: "2021-12-30T23:59:59Z"
        type: string
      id:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      repositoryID:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      repositoryName:
        example: my-project
        type: string
      status:
        enum:
        - running
        - success
        - error
        example: success
        type: string
      workspaceID:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      workspaceName:
        example: my-workspace
        type: string
    type: object
  analysis.AnalysisVulnerabilities:
    properties:
      analysisID:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      createdAt:
        example: "2021-12-30T23:59:59Z"
        type: string
      vulnerabilities:
        $ref: '#/definitions/vulnerability.Vulnerability'
      vulnerabilityID:
        example: 00000000-0000-0000-0000-000000000000
        type: string
    type: object
  cli.AnalysisData:
    properties:
      analysis:
        $ref: '#/definitions/analysis.Analysis'
      repositoryName:
        type: string
    type: object
  entities.Response:
    properties:
      code:
        type: integer
      content:
        type: object
      status:
        type: string
    type: object
  vulnerability.Vulnerability:
    properties:
      code:
        example: '-----BEGIN RSA PRIVATE KEY-----'
        type: string
      column:
        example: "1"
        type: string
      commitAuthor:
        example: horusec
        type: string
      commitDate:
        example: "2021-12-30"
        type: string
      commitEmail:
        example: horusec@zup.com.br
        type: string
      commitHash:
        example: a21fa164c00a15f3e91f5ee6659cb6a793b39a8d
        type: string
      commitMessage:
        example: Initial commit
        type: string
      confidence:
        enum:
        - HIGH
        - MEDIUM
        - LOW
        example: HIGH
        type: string
      details:
        example: Asymmetric Private Key Found SSH and/or x.509 Cerficates among the
          files of your project, make sure you want this kind of information inside
          your Git repo, since it can be missused by someone with access to any kind
          of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html)
          advisory.
        type: string
      file:
        example: /deployments/cert.pem
        type: string
      language:
        enum:
        - Go
        - C#
        - Dart
        - Ruby
        - Python
        - Java
        - Kotlin
        - Javascript
        - Typescript
        - Leaks
        - HCL
        - C
        - PHP
        - HTML
        - Generic
        - YAML
        - Elixir
        - Shell
        - Nginx
        example: Leaks
        type: string
      line:
        example: "1"
        type: string
      securityTool:
        enum:
        - HorusecEngine
        - GoSec
        - SecurityCodeScan
        - Brakeman
        - Safety
        - Bandit
        - NpmAudit
        - YarnAudit
        - GitLeaks
        - TfSec
        - Semgrep
        - Flawfinder
        - PhpCS
        - MixAudit
        - Sobelow
        - ShellCheck
        - BundlerAudit
        example: HorusecEngine
        type: string
      severity:
        enum:
        - CRITICAL
        - ' HIGH'
        - ' MEDIUM'
        - ' LOW'
        - ' INFO'
        example: CRITICAL
        type: string
      type:
        enum:
        - Vulnerability
        - ' Risk Accepted'
        - ' False Positive'
        - ' Corrected'
        example: Vulnerability
        type: string
      vulnHash:
        example: 8bcac7908eb950419537b91e19adc83ce2c9cbfdacf4f81157fdadfec11f7017
        type: string
      vulnerabilityID:
        example: 00000000-0000-0000-0000-000000000000
        type: string
    type: object
info:
  contact:
    email: horusec@zup.com.br
    name: Horusec
    url: https://github.com/ZupIT/horusec-platform
  description: Service responsible for analysis operations from Horusec-CLI.
  termsOfService: http://swagger.io/terms/
  title: Horusec-API
paths:
  /api/analysis:
    post:
      consumes:
      - application/json
      description: Start new analysis
      operationId: start-new-analysis
      parameters:
      - description: send new analysis info
        in: body
        name: SendNewAnalysis
        required: true
        schema:
          $ref: '#/definitions/cli.AnalysisData'
      produces:
      - application/json
      responses:
        "201":
          description: CREATED
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Analysis
  /api/analysis/{analysisID}:
    get:
      consumes:
      - application/json
      description: Get analysis on database
      operationId: get-one-analysis
      parameters:
      - description: analysisID of the analysis
        in: path
        name: analysisID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  $ref: '#/definitions/analysis.Analysis'
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "404":
          description: NOT FOUND
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Analysis
  /api/health:
    get:
      consumes:
      - application/json
      description: Check if Health of service it's OK!
      operationId: health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Health
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Horusec-Authorization
    type: apiKey
swagger: "2.0"
