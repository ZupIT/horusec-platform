{
    "analysis": {
        "id": "2a073064-d509-4510-b270-a52c18bdd2f2",
        "repositoryID": "00000000-0000-0000-0000-000000000000",
        "repositoryName": "",
        "workspaceID": "00000000-0000-0000-0000-000000000000",
        "workspaceName": "",
        "status": "error",
        "errors": "invalid character 'C' looking for beginning of value; unexpected end of JSON input; invalid character 't' in literal false (expecting 'l')",
        "createdAt": "2021-08-31T10:28:42.001992209-03:00",
        "finishedAt": "2021-08-31T10:34:50.109805522-03:00",
        "analysisVulnerabilities": [
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109825593-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "eced1b3a-73f4-46be-a4ed-d09d0f91f041",
                    "line": "0",
                    "column": "0",
                    "confidence": "HIGH",
                    "file": "yaml/example1/example.yaml",
                    "code": "",
                    "details": "Capability System Admin\nCAP_SYS_ADMIN is the most privileged capability and should always be avoided.",
                    "securityTool": "HorusecEngine",
                    "language": "YAML",
                    "severity": "CRITICAL",
                    "vulnHash": "7cddba10b19c7efa72a35d49080c4eb0745aa57428e5c7d3cc4c10c463593d72",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109840353-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "13b72915-afa8-4011-b00a-b910d3285074",
                    "line": "20",
                    "column": "19",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/config.js",
                    "code": "\"server\": \"postgres://postgres:postgres@127.0.0.1\",",
                    "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "287805b1c51443d5c6dcb7a288406bb1134a5732256d46c33260de1935f6a5fb",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109840968-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "fb564292-49d0-4259-83a4-c756f458e6eb",
                    "line": "28",
                    "column": "19",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/config.js",
                    "code": "\"server\": \"postgres://postgres:postgres@10.211.55.70\",",
                    "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "71a57fa34081f314382168ec31dd71d61edbcd2c1af1b9d6b398a2c28802d2e0",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109841525-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "94b18989-9712-4dd7-865a-d37dd77058fd",
                    "line": "36",
                    "column": "19",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/config.js",
                    "code": "\"server\": \"postgres://postgres:postgres@postgres_db\",",
                    "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "4bce48cd6dd4cb4226beb71d5af3ca9edbf7e25c68b1221094983743a592a056",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10984208-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "ef6b22c3-1e29-4915-8f6d-004191c09ef6",
                    "line": "1",
                    "column": "27",
                    "confidence": "MEDIUM",
                    "file": "leaks/example1/deployments/certificates/client-cert.txt",
                    "code": "-----BEGIN CERTIFICATE-----",
                    "details": "Asymmetric Private Key\nFound SSH and/or x.509 Cerficates among the files of your project, make sure you want this kind of information inside your Git repo, since it can be missused by someone with access to any kind of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "ceefa1eba0d6918bd65f25f571ea22dc4890f4a181fc71842aafa9f7a8d7f224",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109842721-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "d9451d69-5d7b-408e-b2b1-8b8aa538d327",
                    "line": "1",
                    "column": "31",
                    "confidence": "MEDIUM",
                    "file": "leaks/example1/deployments/certificates/ca-key.txt",
                    "code": "-----BEGIN RSA PRIVATE KEY-----",
                    "details": "Asymmetric Private Key\nFound SSH and/or x.509 Cerficates among the files of your project, make sure you want this kind of information inside your Git repo, since it can be missused by someone with access to any kind of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "8b90467980e86af9b6d61bb1b7f81e4a35d21aac522e69ae7f3b4c7dca089031",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109843278-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "e0cdcf71-cae5-4944-9629-1a83222864d4",
                    "line": "1",
                    "column": "27",
                    "confidence": "MEDIUM",
                    "file": "leaks/example1/deployments/certificates/ca.txt",
                    "code": "-----BEGIN CERTIFICATE-----",
                    "details": "Asymmetric Private Key\nFound SSH and/or x.509 Cerficates among the files of your project, make sure you want this kind of information inside your Git repo, since it can be missused by someone with access to any kind of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "27d1041298c289ee41815475aba5c95969d38c3aac772c83c6ee40e7290d7b56",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109843828-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "29aa6707-aef1-4b27-989d-d1b5c6818699",
                    "line": "32",
                    "column": "20",
                    "confidence": "MEDIUM",
                    "file": "go/example2/main.go",
                    "code": "URI := fmt.Sprint(\"postgresql://root:root@postgresql:5432/horusecDB?sslmode=disable\")",
                    "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "64cc7fa957ed6283a6b32ef775935267af8430d1cccbd954f1c38c5cceb3c8cc",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109844392-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c8fb9adb-9ff4-4d7d-bf61-9c783e642011",
                    "line": "26",
                    "column": "1",
                    "confidence": "MEDIUM",
                    "file": "go/example2/main.go",
                    "code": "password := \"password\"",
                    "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "649393e42ead4fd5ec4510c8f2edcce892f90f418d7d12dc0e5d47aede1c1915",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109851912-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "f292b81c-4e3a-4647-a2e4-ca9d390e2ac8",
                    "line": "1",
                    "column": "31",
                    "confidence": "MEDIUM",
                    "file": "leaks/example1/deployments/certificates/client-key.txt",
                    "code": "-----BEGIN RSA PRIVATE KEY-----",
                    "details": "Asymmetric Private Key\nFound SSH and/or x.509 Cerficates among the files of your project, make sure you want this kind of information inside your Git repo, since it can be missused by someone with access to any kind of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "082524dc9b7daddd7420ca10faa8d91def0ff3751702de13208ec97c4b5ef55e",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109852462-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "9b9cfd57-eac3-4a59-b80f-af156269897d",
                    "line": "1",
                    "column": "27",
                    "confidence": "MEDIUM",
                    "file": "leaks/example1/deployments/certificates/server-cert.txt",
                    "code": "-----BEGIN CERTIFICATE-----",
                    "details": "Asymmetric Private Key\nFound SSH and/or x.509 Cerficates among the files of your project, make sure you want this kind of information inside your Git repo, since it can be missused by someone with access to any kind of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "30f2ce8c65b20855e070a51584ef529f0626b8c306dc9d06c4987f64ecb76d2d",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10985301-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "40d53b0f-fbc6-4fc4-bf8e-5b3b3ae92231",
                    "line": "1",
                    "column": "31",
                    "confidence": "MEDIUM",
                    "file": "leaks/example1/deployments/certificates/server-key.txt",
                    "code": "-----BEGIN RSA PRIVATE KEY-----",
                    "details": "Asymmetric Private Key\nFound SSH and/or x.509 Cerficates among the files of your project, make sure you want this kind of information inside your Git repo, since it can be missused by someone with access to any kind of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "e117cbb430c918d9ca6cdade3f9523fc49a87ea6605b97bd504184d325a12fae",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109853572-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "02d2a0e1-3c76-4efe-b68c-ec8644312447",
                    "line": "26",
                    "column": "33",
                    "confidence": "MEDIUM",
                    "file": "leaks/example2/deployments/docker-compose.yaml",
                    "code": "HORUSEC_DATABASE_SQL_URI: \"postgresql://root:root@127.0.0.1:5432/horusec_db?sslmode=disable\"",
                    "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "fc6df21e6334e1d020843d376c9cf09259607f0d0c9c1b05761fa63fd4c3ac36",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109854134-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "906bf98e-8283-4ade-b784-3f646e7465be",
                    "line": "3",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "python/example1/main.py",
                    "code": "password = 'thisisnotapassword' #nohorus",
                    "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "9ad4016f0bf3abdea44f378b9dd06254c69fdba590efefdd1446d78de6d05c92",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109854761-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "240256ba-6ca4-483c-9819-d73a227e34a0",
                    "line": "3",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "python/example2/main.py",
                    "code": "password = 'thisisnotapassword' #nohusky",
                    "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "32fa47f430f952cc3b27208927c5c9c0fd1df6efae91bd552235e7a6024a010f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109855319-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "d5478a08-0220-4cc9-959e-a06c0b1365b8",
                    "line": "148",
                    "column": "8",
                    "confidence": "MEDIUM",
                    "file": "kotlin/example1/src/main/kotlin/Hello.kt",
                    "code": "val password = \"secret1234\"",
                    "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "8fe653232c0c4052be39049a585b57976091fafd13c7bbdb4f4b2468e35a1292",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109855874-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "368696a7-0d3c-4161-90bb-552db9ce6ca7",
                    "line": "32",
                    "column": "12",
                    "confidence": "MEDIUM",
                    "file": "swift/example1/example/example/Source/Exercises/Key Management/Hard Coded Keys/BrokenCryptographyExerciseVC.swift",
                    "code": "let password = \"b@nkP@ssword123\"",
                    "details": "Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "CRITICAL",
                    "vulnHash": "4396bd526d818fa9238cf34d56e354787342f038a818d439bcbcd679e3ac54af",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109898601-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "053c309d-9ae9-4ad9-bd62-c283f163eaa5",
                    "line": "22",
                    "column": "34",
                    "confidence": "LOW",
                    "file": "csharp/example1/NetCoreVulnerabilities/Vulnerabilities.cs",
                    "code": "client.Credentials = new NetworkCredential(\"test@test.com\", \"testpassword\");",
                    "details": "Hardcoded value in 'string password'.\nThe secret value to this API appears to be hardcoded. Consider moving the value to externalized configuration to avoid leakage of secret information. For more information, check the following url (https://security-code-scan.github.io/#SCS0015).",
                    "securityTool": "SecurityCodeScan",
                    "language": "C#",
                    "severity": "CRITICAL",
                    "vulnHash": "496ff997c2f729c6e84ff48a3f1b23e04b357df3b6ceddc2521fb35ca9771259",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109899146-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "f3ea68a6-55bd-4c20-bfb7-c78d9167efa2",
                    "line": "11",
                    "column": "",
                    "confidence": "HIGH",
                    "file": "/home/wilian/go/src/github.com/ZupIT/horusec/examples/csharp/example1/NetCoreVulnerabilities/NetCoreVulnerabilities.csproj",
                    "code": "\u003cPackageReference Include=\"adplug\" Version=\"2.3.1\"/\u003e",
                    "details": "A possible vulnerable dependency was found, please checkout the following url for more information (https://github.com/advisories/GHSA-874w-m2v2-mj64).",
                    "securityTool": "DotnetCli",
                    "language": "C#",
                    "severity": "CRITICAL",
                    "vulnHash": "9fa89c2ec81b3191a173c763dbc3217f730b97fa9a7b5f55416d26426d4420b1",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109902008-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "3c3311ed-f5dd-4fe5-81c9-bdeb218544f9",
                    "line": "9",
                    "column": "",
                    "confidence": "HIGH",
                    "file": "/home/wilian/go/src/github.com/ZupIT/horusec/examples/csharp/example1/NetCoreVulnerabilities/NetCoreVulnerabilities.csproj",
                    "code": "\u003cPackageReference Include=\"Wire\" Version=\"1.0.0\"/\u003e",
                    "details": "A possible vulnerable dependency was found, please checkout the following url for more information (https://github.com/advisories/GHSA-hpw7-3vq3-mmv6).",
                    "securityTool": "DotnetCli",
                    "language": "C#",
                    "severity": "CRITICAL",
                    "vulnHash": "f086857f6c211537fbf10adfa31e2998b7efee6e839f35b5df12b585f2a99b41",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109815749-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c635c8cc-6a14-448e-9353-949c93f42943",
                    "line": "2",
                    "column": "7",
                    "confidence": "LOW",
                    "file": "java/example1/src/main/java/com/mycompany/app/App.java",
                    "code": "import java.util.Random;",
                    "details": "Insecure Random Number Generator\nThe App uses an insecure Random Number Generator. For more information checkout the CWE-330 (https://cwe.mitre.org/data/definitions/330.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Java",
                    "severity": "HIGH",
                    "vulnHash": "55075a4b6921ed62650fa4a13d1670c1945dbaf897b51ca14f76e7f6264e0d1b",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10982957-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c371e5c9-1af5-4081-af4f-a250623c36fd",
                    "line": "24",
                    "column": "29",
                    "confidence": "HIGH",
                    "file": "dart/example1/lib/data/query/user_ctr.dart",
                    "code": "uery(\"SELECT * FROM user WHERE username = '$user' and password = '$password'\");",
                    "details": "SQL Injection\nThe input values included in SQL queries need to be passed in safely. Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection. Alternatively to prepare statements, each parameter can be escaped manually. For more information checkout the CWE-89 (https://cwe.mitre.org/data/definitions/89.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Dart",
                    "severity": "HIGH",
                    "vulnHash": "c0c935f03af6cf1cada2f6d917789b0b2b9081db11c8224bdc02cc025864b22c",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109835289-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "38cde7ef-a00a-4907-9b74-f618fae40986",
                    "line": "0",
                    "column": "0",
                    "confidence": "HIGH",
                    "file": "javascript/example4/test.js",
                    "code": "",
                    "details": "Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "216aff312d56cb7768a745384d7816fe40fd1c9482de2f675d9bbbe7f5ae7a6a",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109835838-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "8d1160e4-8bd4-4543-b5c4-0973426760cb",
                    "line": "36",
                    "column": "24",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/dummy.js",
                    "code": "\"price\": parseInt(Math.random() * 100),",
                    "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "97e5566a90a4578d40d2d47274c4ae7887fe9dda94c32a5a44f17ad58fb268bc",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109836453-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6dcca735-c422-497d-991c-3b0a627faa9a",
                    "line": "42",
                    "column": "24",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/dummy.js",
                    "code": "\"price\": parseInt(Math.random() * 100),",
                    "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "8fca2062c0f3750e2a9ed21de9bb7642dd6c0320028da9b76952c2b514b2e850",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109837008-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "129a5413-2f41-4910-ab11-d3bc5ebc506a",
                    "line": "48",
                    "column": "24",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/dummy.js",
                    "code": "\"price\": parseInt(Math.random() * 100),",
                    "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "c9402d46ee6f41f0a55813e95684f42dd277de21a02e17ef0a149626ca686f3e",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109837567-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "329bd036-bf79-40a0-a56f-8d65f9342cf9",
                    "line": "66",
                    "column": "24",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/dummy.js",
                    "code": "\"price\": parseInt(Math.random() * 100),",
                    "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "d77cd15b5ba745158c4a8bf1bc5316e3a6075b0054b2ef8676e1969cc2d7c62c",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109838122-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "f797b9a2-e5ed-4aba-a57c-80aafd14a2ea",
                    "line": "72",
                    "column": "24",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/dummy.js",
                    "code": "\"price\": parseInt(Math.random() * 100),",
                    "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "edb15d525a25c9b5352efcd3065e4fbdd12f138b2b50a06482145a03cded930f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109838681-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "915138c4-8af9-4c8a-8bd7-dd0a568a26f1",
                    "line": "78",
                    "column": "24",
                    "confidence": "MEDIUM",
                    "file": "javascript/example3/dummy.js",
                    "code": "\"price\": parseInt(Math.random() * 100),",
                    "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "4603c46b6561a5fad43ff58d6e1cb68401827f5e4864e5726f3152d98641aa9d",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.1098398-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "b108978a-08fb-49f7-b7dc-ce35efa35214",
                    "line": "31",
                    "column": "12",
                    "confidence": "LOW",
                    "file": "javascript/example2/app.js",
                    "code": "res.redirect(url);",
                    "details": "Redirect to unknown path\nSanitizing untrusted URLs is an important technique for preventing attacks such as request forgeries and malicious redirections. Often, this is done by checking that the host of a URL is in a set of allowed hosts. For more information checkout the CWE-20 (https://cwe.mitre.org/data/definitions/20.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "511ce5b6aa63d37a894bc703357a102412330ca183f7c398362ea2dc50a26eb8",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10984496-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "53ea4187-99b6-4c90-b4aa-a00c7844cced",
                    "line": "23",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'DB_NAME', 'mkllel' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "e0a6ce0869b1dd7c16a05dd27ac2009180440c96d72b2fce3a4a77ccffee0547",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109845572-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "f0c2957f-132b-46c0-90e7-67eaa3d0e0a0",
                    "line": "26",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'DB_USER', 'mkllel' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "527818c85f393b9540f44789bb7c8ac38a5c66ced07b859f51e1dfc29cab8227",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109846128-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "63ff6679-5e9a-4c50-a813-88805e8ba39d",
                    "line": "29",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'DB_PASSWORD', 'wen0221!' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "4dac8208d0ddddc327b936fef7d902c91b30eac2d7fc6883e1568437e274ced6",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109846688-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "de2d794b-a100-46e0-ac5e-71cc682f7072",
                    "line": "32",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'DB_HOST', 'localhost' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "aa51f4e594d3b0e9d4e99715760bea14db8622dcc37dd914524d1bf65c9b4989",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109847252-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "64050cc8-4318-4340-95bb-f64682837083",
                    "line": "49",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'AUTH_KEY',         'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "3fa7f6b5b18af636460f5f050ba01c48847dd1f26ff2233208e09c459b1a8d21",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109847804-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "d4acf1be-5198-4a3b-ac44-875be6c63282",
                    "line": "50",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'SECURE_AUTH_KEY',  'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "e34007bad85b92d2aa75cef0c9034a4c29df16f4e65768748b6919daaea591d3",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109848352-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "8dcc7f4e-abdb-49db-9bd5-e5c4f48c1256",
                    "line": "51",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'LOGGED_IN_KEY',    'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "11f4291a27bfd1dd195cc513a3a102fce6e4c9abfb9dc16c2e355327e257e21b",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109848903-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "d6ddd7b7-214c-4b06-b572-ffca8b706871",
                    "line": "52",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'NONCE_KEY',        'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "7d30834fe42eb86a94d4ca841913dd23cc679335a5da4c6956e5279da26d5a99",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10984945-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "1cb8bc66-f14d-4c50-84b1-73656bf10549",
                    "line": "53",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'AUTH_SALT',        'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "b6ad78885a2780b839acd36626bed1225e282c1da0433dd17445cc0cc3fbc8b0",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109850255-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6171cb2a-64b2-4c26-99ab-91d2649d375a",
                    "line": "54",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'SECURE_AUTH_SALT', 'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "89c85a7efec524fe16cdf79e078ced743858b6dd477479c7cdbe9dfabb49b185",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10985081-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "8eac122e-62cc-41ef-a0b0-7a0af8f8de24",
                    "line": "55",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'LOGGED_IN_SALT',   'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "98ef9e6fa39c6502768a2b7c329913b28064a4604896de8aa0e5cd488bc911a6",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10985136-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "8b2b8137-fc3b-4532-9ce7-d158c2c0fc83",
                    "line": "56",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "php/example1/wp-config.php",
                    "code": "define( 'NONCE_SALT',       'put your unique phrase here' );",
                    "details": "Wordpress configuration file disclosure\nWordpress configuration file exposed, this can lead to the leak of admin passwords, database credentials and a lot of sensitive data about the system. Check CWE-200 (https://cwe.mitre.org/data/definitions/200.html) for more details.",
                    "securityTool": "HorusecEngine",
                    "language": "Leaks",
                    "severity": "HIGH",
                    "vulnHash": "27a8db1c57b543f7bf93e41360713a1becadec78cb29081c7807c347083e8921",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109860428-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "a4a7d4cd-7a1f-4d47-8d1a-30dd6df31612",
                    "line": "100",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "qs",
                    "details": "Affected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or `]` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "02dfc9b49dbd45e563e2a130a09c450c8a6ffda441750ad0c0326e6a18134c4a",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109861563-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "4b7149a9-a268-4faa-9bd9-afd48408b371",
                    "line": "100",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "qs",
                    "details": "Versions prior to 1.0.0 of `qs` are affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.\n\n",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "10f8cc742fe259d094de8225d7cb87e649859ddca42cfd0b4311d7d0544cc968",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109863243-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "cd83d73e-e6b9-46c1-8f38-387f09664cdc",
                    "line": "85",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "negotiator",
                    "details": "Affected versions of `negotiator` are vulnerable to regular expression denial of service attacks, which trigger upon parsing a specially crafted `Accept-Language` header value.\n\n",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "3cce52843b9dd7a115c22732fb4cc6d5433fc3f94dabf309bd9fca5c036481f0",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10986386-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "aabfeaa7-3edb-4cf8-aa2b-f9c8c4674044",
                    "line": "65",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "fresh",
                    "details": "Affected versions of `fresh` are vulnerable to regular expression denial of service when parsing specially crafted user input.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "80fd2efcf64eab0d52efca0c54b91dbf49fb61810487c157a957e8f8b4ed72a1",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109864969-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "29638ebb-5f9f-4ed1-94c7-dd05111af265",
                    "line": "100",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "qs",
                    "details": "Versions prior to 1.0 of `qs` are affected by a denial of service condition. This condition is triggered by parsing a crafted string that deserializes into very large sparse arrays, resulting in the process running out of memory and eventually crashing.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "6f772194aee53c3c958f65aa6013092d56db4cacd5f6600c3503909400953c72",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109867353-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "153b4095-34d0-4e40-a890-5494b1ccb4ca",
                    "line": "118",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "qs",
                    "details": "Versions prior to 1.0.0 of `qs` are affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.\n\n",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "61b7b5004c239cfeb18d346352163b36e098a4395b93037bb90ef696586e4198",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109869081-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "bae52de7-3c7a-4db3-9b72-bfa472ee98c8",
                    "line": "103",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "negotiator",
                    "details": "Affected versions of `negotiator` are vulnerable to regular expression denial of service attacks, which trigger upon parsing a specially crafted `Accept-Language` header value.\n\n",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "a5bb0713194ee271efa9297869fa7911640e06aa9c80c0b90162e3bfd91b5800",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109870201-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "a29222ed-7039-4a7f-a754-e3a9de37787c",
                    "line": "73",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "fresh",
                    "details": "Affected versions of `fresh` are vulnerable to regular expression denial of service when parsing specially crafted user input.",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "HIGH",
                    "vulnHash": "03aa23f4bca9ef818b67d38f2c49aae4cebeecab26e948d01385907d9201c343",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109879198-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "2e08a1de-55d1-4979-b9d9-533904967e8f",
                    "line": "33",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "nokogiri",
                    "details": "libxml2 2.9.10 has an infinite loop in a certain end-of-file situation (nokogiri - 1.10.4) upgrade to \u003e= 1.10.8 (CVE-2020-7595 - https://github.com/sparklemotion/nokogiri/issues/1992)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "HIGH",
                    "vulnHash": "9f5b604782abb10ddb8c63a704b984f6f09d945522aa8bc7a2424a5a4f447a82",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109879753-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "aacc85bb-dd15-4d6d-93f4-eab73ddbdcf3",
                    "line": "107",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "puma",
                    "details": "Keepalive thread overload/DoS in puma (puma - 3.12.1) upgrade to ~\u003e 3.12.2, \u003e= 4.3.1 (CVE-2019-16770 - https://github.com/puma/puma/security/advisories/GHSA-7xx3-m584-x994)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "HIGH",
                    "vulnHash": "fc66a487a35b10ad07b460548611da309799316ed4af99f2c24cfeab8c84dc4f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109880299-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "25f6813b-5df2-418e-b816-f7e0375227ea",
                    "line": "107",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "puma",
                    "details": "HTTP Smuggling via Transfer-Encoding Header in Puma (puma - 3.12.1) upgrade to ~\u003e 3.12.5, \u003e= 4.3.4 (CVE-2020-11076 - https://github.com/puma/puma/security/advisories/GHSA-x7jg-6pwg-fx5h)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "HIGH",
                    "vulnHash": "06347b2d17740189b1e0afc66cfe1dfedfe51d8221cb4e65b9b2573e82a13267",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109884265-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "3097cc9a-643c-4a41-b810-e77ec205ad5f",
                    "line": "194",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "websocket-extensions",
                    "details": "Regular Expression Denial of Service in websocket-extensions (RubyGem) (websocket-extensions - 0.1.4) upgrade to \u003e= 0.1.5 (CVE-2020-7663 - https://github.com/faye/websocket-extensions-ruby/security/advisories/GHSA-g6wq-qcwm-j5g2)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "HIGH",
                    "vulnHash": "861e419fa6b25925f8566da6bcec4d3a35ae1979baf5836209e0ba105edb348c",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109896394-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "afcf86ff-8ac8-4075-a2ad-2a411e74bc8d",
                    "line": "1",
                    "column": "1",
                    "confidence": "LOW",
                    "file": "ruby/example1/app/controllers/application_controller.rb",
                    "code": "class ApplicationController \u003c ActionController::Base\n  def test(options)\n      system(\"ls #{options}",
                    "details": "Detected controller which does not enable cross-site request forgery\nprotections using 'protect_from_forgery'. Add\n'protect_from_forgery :with =\u003e :exception' to your controller class.\n",
                    "securityTool": "Semgrep",
                    "language": "Ruby",
                    "severity": "HIGH",
                    "vulnHash": "9396a6dacb9bae1ce547eaa7149172628ca2a6ca499cced004347daf0b0cc3fa",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109897501-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "65408e37-d860-441e-9f1e-6fd55eb404b0",
                    "line": "15",
                    "column": "32",
                    "confidence": "LOW",
                    "file": "csharp/example1/NetCoreVulnerabilities/Vulnerabilities.cs",
                    "code": "var hashProvider = new SHA1CryptoServiceProvider();",
                    "details": "Weak hashing function.\nSHA1 is no longer considered as a strong hashing algorithm. For more information, check the following url (https://security-code-scan.github.io/#SCS0006).",
                    "securityTool": "SecurityCodeScan",
                    "language": "C#",
                    "severity": "HIGH",
                    "vulnHash": "32dd92eb02c8a2aac3bdfead2eec100c09226453c8e836e4ae4fc03483af59c9",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10990032-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "8427a888-6eac-4a9d-bf40-e1f4401337fa",
                    "line": "14",
                    "column": "",
                    "confidence": "HIGH",
                    "file": "/home/wilian/go/src/github.com/ZupIT/horusec/examples/csharp/example1/NetCoreVulnerabilities/NetCoreVulnerabilities.csproj",
                    "code": "\u003cPackageReference Include=\"MetadataExtractor\" Version=\"2.1.0\"/\u003e",
                    "details": "A possible vulnerable dependency was found, please checkout the following url for more information (https://github.com/advisories/GHSA-cwqq-w8c3-r2jw).",
                    "securityTool": "DotnetCli",
                    "language": "C#",
                    "severity": "HIGH",
                    "vulnHash": "4f722d4d6ad8f277b68ff648fc138d7d95df9dd0044d6b4ce68f56aef75829c7",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109900893-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "f81d4bd4-bea4-4edc-8e29-d9829574f43c",
                    "line": "10",
                    "column": "",
                    "confidence": "HIGH",
                    "file": "/home/wilian/go/src/github.com/ZupIT/horusec/examples/csharp/example1/NetCoreVulnerabilities/NetCoreVulnerabilities.csproj",
                    "code": "\u003cPackageReference Include=\"Microsoft.ChakraCore\" Version=\"1.11.13\"/\u003e",
                    "details": "A possible vulnerable dependency was found, please checkout the following url for more information (https://github.com/advisories/GHSA-2wwc-w2gw-4329).",
                    "securityTool": "DotnetCli",
                    "language": "C#",
                    "severity": "HIGH",
                    "vulnHash": "922be86e3c826829709b8f737528cb8fd67a8c3c52e3c471c69e4428b0a455dc",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109901451-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c565818b-ec18-4c30-b7c5-84c7aa685d90",
                    "line": "13",
                    "column": "",
                    "confidence": "HIGH",
                    "file": "/home/wilian/go/src/github.com/ZupIT/horusec/examples/csharp/example1/NetCoreVulnerabilities/NetCoreVulnerabilities.csproj",
                    "code": "\u003cPackageReference Include=\"Sustainsys.Saml2\" Version=\"2.0.0\"/\u003e",
                    "details": "A possible vulnerable dependency was found, please checkout the following url for more information (https://github.com/advisories/GHSA-g6j2-ch25-5mmv).",
                    "securityTool": "DotnetCli",
                    "language": "C#",
                    "severity": "HIGH",
                    "vulnHash": "91f9a5065cb7f40d0649f8c4ddec6fd5f74c51318e4a8c3e537c011685640bc7",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109812299-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "7cc9627a-f209-4b8c-b242-ef56bcc2908b",
                    "line": "0",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "nginx/example1/server.nginx",
                    "code": "",
                    "details": "Exposure of Sensitive Information\nYour Nginx file must include 'server_tokens off;' configuration. There are many different kinds of mistakes that introduce information exposures. The severities of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it may provide to an attacker. For more information checkout the CWE-200 (https://cwe.mitre.org/data/definitions/200.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Nginx",
                    "severity": "MEDIUM",
                    "vulnHash": "24e64197e010f7826d47d7acc6af191565d85db9ac05a33b8cd3754809e74016",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109812879-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "567b9f3a-eaf1-42db-b8c1-e9fcece7c1a7",
                    "line": "0",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "nginx/example1/server.nginx",
                    "code": "",
                    "details": "Missing X-Content-Type-Options header\nSetting this header will prevent the browser from interpreting files as a different MIME type to what is specified in the Content-Type HTTP header (e.g. treating text/plain as text/css). For more information checkout https://owasp.org/www-project-secure-headers/#x-content-type-options",
                    "securityTool": "HorusecEngine",
                    "language": "Nginx",
                    "severity": "MEDIUM",
                    "vulnHash": "02afc60ad7998792b6b5f0b42169c94880c1e529c1690d513cbf769a1f054b45",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109813499-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "b256ae2c-5a13-4df0-9a39-86777ece8c2a",
                    "line": "0",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "nginx/example1/server.nginx",
                    "code": "",
                    "details": "Improper Restriction of Rendered UI Layers or Frames\nYour Nginx file must include the X-Frame-Options header. A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not intending to. For more information checkout the CWE-1021 (https://cwe.mitre.org/data/definitions/1021.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Nginx",
                    "severity": "MEDIUM",
                    "vulnHash": "94f57eebd94de1602e01b9a445d3834d5c704450da8ac26591cd61ca014ee5b7",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109814067-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "70cbcd87-bb3f-4600-ac4e-43e268a738e9",
                    "line": "0",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "nginx/example1/server.nginx",
                    "code": "",
                    "details": "Missing Content-Security-Policy header\nA Content Security Policy (also named CSP) requires careful tuning and precise definition of the policy. If enabled, CSP has significant impact on the way browsers render pages (e.g., inline JavaScript is disabled by default and must be explicitly allowed in the policy). CSP prevents a wide range of attacks, including cross-site scripting and other cross-site injections. For more information checkout https://owasp.org/www-project-secure-headers/#content-security-policy",
                    "securityTool": "HorusecEngine",
                    "language": "Nginx",
                    "severity": "MEDIUM",
                    "vulnHash": "461c28f6c4e9645ce9fa425efdf9a7702f6095f0f6e048b6bd20ed35f7ed7ee0",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109816299-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "4cf84d31-4c94-4118-8a35-5423dd8f509d",
                    "line": "53",
                    "column": "16",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "webView.loadHTMLString(htmlText, baseURL: baseURL)",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "c015cd8ce2e586172427a28e28c91ac6df0a5629268909a76ec07788512b007f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109816865-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "962154ac-5b1c-4910-8dc8-3a45ea8fed93",
                    "line": "26",
                    "column": "16",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "let webView = configureWebviewWith(htmlText: htmlText)",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "838eff7ff5690f1ece94c53845a66ccec4b4d4be0e56cde0a415b0089a3e97c4",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109817421-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "4d68b9b1-1aca-432a-8de9-38ee0d4050ab",
                    "line": "28",
                    "column": "12",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "webView.frame = CGRect(x: x, y: 0,",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "a080d441c0b45f8ed253722956779e16da955872ea0fd00bbf9a0bedda869b9a",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109818033-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "e14c7cab-b7a1-48cd-b24c-5052149baec0",
                    "line": "31",
                    "column": "34",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "scrollView.addSubview(webView)",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "593b59f05eb14a232614b489e6cd1002c64ac1d487618cec4736dbb2c91de763",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109818583-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "06fa4f6d-c125-458d-871c-2b915828f0a3",
                    "line": "51",
                    "column": "12",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "let webView = UIWebView()",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "c8d4c87c7f956254800eb4f6500f165d81d2f65a93cfc80f3d3b6a7105d15407",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109819137-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "81b3dce3-2b3e-4773-96f0-06e445872904",
                    "line": "53",
                    "column": "8",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "webView.loadHTMLString(htmlText, baseURL: baseURL)",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "c015cd8ce2e586172427a28e28c91ac6df0a5629268909a76ec07788512b007f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109819875-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "86288cbc-8a15-4a0a-9240-421f9ebe5b66",
                    "line": "54",
                    "column": "15",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "return webView",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "fec9bd1f952f1e7b2572c7952e67d5161190f10e2e72723626818190f0f8e422",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109820548-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "eafedafa-fbc7-42dc-8894-ff74512955c2",
                    "line": "9",
                    "column": "16",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Exercises/Injection Flaws/XSS/CrossSiteScriptingExerciseVC.swift",
                    "code": "webview.loadHTMLString(webText, baseURL: nil)",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "2ac3f5442438e3eecda83d87501e0fc634cc9b5301529c52f2e9b023c270ff4f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109821099-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "9588df63-50e3-4e10-839e-8571a35fece3",
                    "line": "25",
                    "column": "16",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HTMLViewController.swift",
                    "code": "webView.loadHTMLString(content, baseURL: baseURL)",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "12face7c79cbe5d4899b8eb0d0acbc1fd44de5e220bf66da46a20f89ad2dd1f6",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109821651-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "03a0318b-40b0-42ba-9b5c-075b5db538a0",
                    "line": "5",
                    "column": "23",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HTMLViewController.swift",
                    "code": "@IBOutlet weak var webView: UIWebView!",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "f70eac560071e1cdc027f0dc97177cf03c0ecbdfac593321d9ca92ee832c08f6",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109822207-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "79131651-fa09-40c2-b22a-b162af6ba32b",
                    "line": "25",
                    "column": "8",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HTMLViewController.swift",
                    "code": "webView.loadHTMLString(content, baseURL: baseURL)",
                    "details": "Javascript injection\nUser input not sanitized in \"loadHTMLString\" can result in an injection of JavaScript in the context of your application, allowing access to private data. For more information checkout the CWE-95 (https://cwe.mitre.org/data/definitions/95.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "12face7c79cbe5d4899b8eb0d0acbc1fd44de5e220bf66da46a20f89ad2dd1f6",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109822832-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "ecdb1ee3-1c61-4423-9641-980f0a20c360",
                    "line": "5",
                    "column": "32",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HTMLViewController.swift",
                    "code": "@IBOutlet weak var webView: UIWebView!",
                    "details": "WebView Safari\nIt is recommended to use WKWebView instead of SFSafariViewController or UIWebView to prevent navigating to arbitrary URLs.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "282f832bc2e18adcc48637e501b4f8f86e9bbc7db1b02fb36aff46660a3b90da",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109823388-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "5b5ae194-6607-4902-8611-a54a00abb98a",
                    "line": "4",
                    "column": "32",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Exercises/Injection Flaws/XSS/CrossSiteScriptingExerciseVC.swift",
                    "code": "@IBOutlet weak var webview: UIWebView!",
                    "details": "WebView Safari\nIt is recommended to use WKWebView instead of SFSafariViewController or UIWebView to prevent navigating to arbitrary URLs.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "836bfa05ad44033a3bcc788eff3d502d640ab559449ddaacfe994a630a31b4dd",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109823944-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "909df699-b85f-4e99-b927-6228a2c34edc",
                    "line": "8",
                    "column": "62",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Exercises/Injection Flaws/XSS/CrossSiteScriptingExerciseVC.swift",
                    "code": "let webText = \"Welcome to XSS Exercise !!! \\n Here is UIWebView ! \\(textField.text ?? \"\")\"",
                    "details": "WebView Safari\nIt is recommended to use WKWebView instead of SFSafariViewController or UIWebView to prevent navigating to arbitrary URLs.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "162c63f15987319ddd01d1e876db1d12d538920465f8cdfc9b98ad841dc07e2a",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109824494-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6c5ff955-1e51-48d2-9a0b-e37a198e852d",
                    "line": "50",
                    "column": "51",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "func configureWebviewWith(htmlText: String) -\u003e UIWebView {",
                    "details": "WebView Safari\nIt is recommended to use WKWebView instead of SFSafariViewController or UIWebView to prevent navigating to arbitrary URLs.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "8b9eb8c7adb7a403c242aeab29f7904cfc7c8e7ccbc3a6f60d021b73393e7ce4",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109825049-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "00ab2345-1c22-4cf2-a470-95045fe6fd55",
                    "line": "51",
                    "column": "22",
                    "confidence": "LOW",
                    "file": "swift/example1/example/example/Source/Container/HintVC.swift",
                    "code": "let webView = UIWebView()",
                    "details": "WebView Safari\nIt is recommended to use WKWebView instead of SFSafariViewController or UIWebView to prevent navigating to arbitrary URLs.",
                    "securityTool": "HorusecEngine",
                    "language": "Swift",
                    "severity": "MEDIUM",
                    "vulnHash": "31782301b6110e60ad4d20eacdb6e353c1011487974250788a994b1a0a4bb5ca",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109828447-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "3627c447-2dac-42cc-b04e-5a32155b5212",
                    "line": "16",
                    "column": "15",
                    "confidence": "MEDIUM",
                    "file": "dart/example1/lib/utils/cripto_util.dart",
                    "code": "var digest = md5.convert(bytes);",
                    "details": "Weak hashing function md5 or sha1\nMD5 or SHA1 have known collision weaknesses and are no longer considered strong hashing algorithms. For more information checkout the CWE-326 (https://cwe.mitre.org/data/definitions/326.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Dart",
                    "severity": "MEDIUM",
                    "vulnHash": "fd89a1dd67a015a13d80a8c1ea50d16f685a5e8b4c1371f2171e1c9028e99add",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109829015-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "1138a5a4-88cb-40e2-9b3c-81a826e92e7d",
                    "line": "7",
                    "column": "15",
                    "confidence": "MEDIUM",
                    "file": "dart/example1/lib/utils/cripto_util.dart",
                    "code": "var digest = sha1.convert(bytes);",
                    "details": "Weak hashing function md5 or sha1\nMD5 or SHA1 have known collision weaknesses and are no longer considered strong hashing algorithms. For more information checkout the CWE-326 (https://cwe.mitre.org/data/definitions/326.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "Dart",
                    "severity": "MEDIUM",
                    "vulnHash": "228c65c455d1b1ef34140453c2d3e7dfb75e05d9b772028a8618132e17b02175",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109830788-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "3aa24e33-d567-43ed-886d-3aeac533c4f3",
                    "line": "15",
                    "column": "31",
                    "confidence": "MEDIUM",
                    "file": "csharp/example1/NetCoreVulnerabilities/Vulnerabilities.cs",
                    "code": "var hashProvider = new SHA1CryptoServiceProvider();",
                    "details": "Weak hashing function md5 or sha1\nMD5 or SHA1 have known collision weaknesses and are no longer considered strong hashing algorithms. For more information checkout the CWE-326 (https://cwe.mitre.org/data/definitions/326.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "C#",
                    "severity": "MEDIUM",
                    "vulnHash": "4634a4c082b2a081fefee899491ccfe2e0965a540b77ee6025a5d4be3903bc15",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109831967-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "9327e699-c370-4d0a-a8c9-091c132f9e04",
                    "line": "37",
                    "column": "25",
                    "confidence": "MEDIUM",
                    "file": "csharp/example1/NetCoreVulnerabilities/Vulnerabilities.cs",
                    "code": "var cookie = new CookieOptions();",
                    "details": "Insecure Http Cookie Transport\nCookies containing authentication tokens, session tokens, and other state management credentials must be protected in transit across a network. Set the cookie options’ Secure property to true to prevent the browser from transmitting cookies over HTTP. For more information checkout the CWE-614 (https://cwe.mitre.org/data/definitions/614.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "C#",
                    "severity": "MEDIUM",
                    "vulnHash": "0633351a8e51b224db6756cf8390a038747993348880ceecff88b820b65a86f0",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109856446-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6f380a2a-bb04-4172-9112-71f7975b6f20",
                    "line": "38",
                    "column": "7",
                    "confidence": "HIGH",
                    "file": "go/example1/api/util/util.go",
                    "code": "37: func GetMD5(s string) string {\n38: \th := md5.New()\n39: \tio.WriteString(h, s) // #nohorus\n",
                    "details": "Use of weak cryptographic primitive",
                    "securityTool": "GoSec",
                    "language": "Go",
                    "severity": "MEDIUM",
                    "vulnHash": "cf97ae53f6327620a88a3850c509d6c8000a5dcbe3a3248e768281434fee7b1a",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109856999-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "cecebf50-b6bd-4cae-8f3e-0214440c9aa6",
                    "line": "19",
                    "column": "2",
                    "confidence": "HIGH",
                    "file": "go/example1/api/util/util.go",
                    "code": "18: import (\n19: \t\"crypto/md5\"\n20: \t\"fmt\"\n",
                    "details": "Blocklisted import crypto/md5: weak cryptographic primitive",
                    "securityTool": "GoSec",
                    "language": "Go",
                    "severity": "MEDIUM",
                    "vulnHash": "34543ba0d13b31394adc9f4643809f5bb5fe43cce5a0fea229847d998521c402",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109859872-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "2d491a8b-a239-4645-ae2f-e8e7928edb18",
                    "line": "80",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "mime",
                    "details": "Affected versions of `mime` are vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "MEDIUM",
                    "vulnHash": "06ea80cb7addf926d17113fa51043c9c500ed76407a91c5e4f7b3bad4094b7b7",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109860994-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "27960ec9-d967-4935-bc39-f0b31aea82dc",
                    "line": "41",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "express",
                    "details": "Vulnerable versions of express do not specify a charset field in the content-type header while displaying 400 level response messages. The lack of enforcing user's browser to set correct charset, could be leveraged by an attacker to perform a cross-site scripting attack, using non-standard encodings, like UTF-7.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "MEDIUM",
                    "vulnHash": "d85b675e2ba97d430a3f5376b72c75a7f7a629e950b57d51a1be8a25716c1e85",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109862128-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "48292ac9-92a4-4b5d-a410-01fb5a54fcd8",
                    "line": "26",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "cookie-signature",
                    "details": "Affected versions of `cookie-signature` are vulnerable to timing attacks as a result of using a fail-early comparison instead of a constant-time comparison. \n\nTiming attacks remove the exponential increase in entropy gained from increased secret length, by providing per-character feedback on the correctness of a guess via miniscule timing differences.\n\nUnder favorable network conditions, an attacker can exploit this to guess the secret in no more than `charset*length` guesses, instead of `charset^length` guesses required were the timing attack not present. \n",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "MEDIUM",
                    "vulnHash": "4ec6bfd25f10dfa9722d71c0e687490baad87d3aa41cf7ad80d4b3d2b023c18c",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109866633-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6820271a-a6ae-499e-b9fa-3256422e9b2c",
                    "line": "45",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "express",
                    "details": "Vulnerable versions of express do not specify a charset field in the content-type header while displaying 400 level response messages. The lack of enforcing user's browser to set correct charset, could be leveraged by an attacker to perform a cross-site scripting attack, using non-standard encodings, like UTF-7.",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "MEDIUM",
                    "vulnHash": "9f65c04c08ee1b6a8f97064dcacc2f14595f82cbf7c4f6cbde3e8bbef2c16bf5",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109869644-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "338ff4a7-a746-463d-8f42-8829f2bbf43c",
                    "line": "18",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "cookie-signature",
                    "details": "Affected versions of `cookie-signature` are vulnerable to timing attacks as a result of using a fail-early comparison instead of a constant-time comparison. \n\nTiming attacks remove the exponential increase in entropy gained from increased secret length, by providing per-character feedback on the correctness of a guess via miniscule timing differences.\n\nUnder favorable network conditions, an attacker can exploit this to guess the secret in no more than `charset*length` guesses, instead of `charset^length` guesses required were the timing attack not present. \n",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "MEDIUM",
                    "vulnHash": "d3d6daae56b3d3feb43023acb726392260883037c1e0e1592af6a87af5905865",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109871302-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "dd0a983a-d11b-4d2f-951e-c7c0785ff26f",
                    "line": "93",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "mime",
                    "details": "Affected versions of `mime` are vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "MEDIUM",
                    "vulnHash": "7b9167ad8a32b346cbdd647eaa3ab6ae2237be8a1270126e091c95546f8c54e9",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109878084-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "fc8e9afe-cd53-4e8e-9da2-6e00a05b7c4d",
                    "line": "90",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "loofah",
                    "details": "Loofah XSS Vulnerability (loofah - 2.2.3) upgrade to \u003e= 2.3.1 (CVE-2019-15587 - https://github.com/flavorjones/loofah/issues/171)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "MEDIUM",
                    "vulnHash": "68e6dc6d675444453996039273c5734d9f2fc1cb27249e6d7322fdff85771f65",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109880863-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "85ad1bed-31c6-40c7-9cbe-8ec238973d98",
                    "line": "107",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "puma",
                    "details": "HTTP Smuggling via Transfer-Encoding Header in Puma (puma - 3.12.1) upgrade to ~\u003e 3.12.6, \u003e= 4.3.5 (CVE-2020-11077 - https://github.com/puma/puma/security/advisories/GHSA-w64w-qqph-5gxm)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "MEDIUM",
                    "vulnHash": "5191cd518e039358f7eaead7d0c72d204aaf93a9a64f30f1293b512513ecc23f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109881416-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "68e6a4b5-7ef2-44c8-bdbd-b9a7b40b4b67",
                    "line": "107",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "puma",
                    "details": "HTTP Response Splitting vulnerability in puma (puma - 3.12.1) upgrade to ~\u003e 3.12.4, \u003e= 4.3.3 (CVE-2020-5247 - https://github.com/puma/puma/security/advisories/GHSA-84j7-475p-hp8v)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "MEDIUM",
                    "vulnHash": "cc625639b8c290b653e80d6372784dbcfaeb7a90844b4e765bfdaf172a21c7da",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109882033-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6baf35d1-f093-4d56-879a-ae9bba3bb4bf",
                    "line": "107",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "puma",
                    "details": "HTTP Response Splitting (Early Hints) in Puma (puma - 3.12.1) upgrade to ~\u003e 3.12.4, \u003e= 4.3.3 (CVE-2020-5249 - https://github.com/puma/puma/security/advisories/GHSA-33vf-4xgg-9r58)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "MEDIUM",
                    "vulnHash": "c9926ef3bb87da51c704bebdaf60c5f614bc33e5e00795f810d62a082517889c",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109884815-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "37337413-4e47-469c-a50e-4493748b5241",
                    "line": "3",
                    "column": "",
                    "confidence": "MEDIUM",
                    "file": "ruby/example1/app/controllers/application_controller.rb",
                    "code": "system(\"ls #{options}\")",
                    "details": "https://brakemanscanner.org/docs/warning_types/command_injection/ Possible command injection",
                    "securityTool": "Brakeman",
                    "language": "Ruby",
                    "severity": "MEDIUM",
                    "vulnHash": "dddd2f63d403cdc5fa9759b74fc36758d5af20f4f1bf14720627a06ef8054519",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109885365-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "0b11885a-6028-4d13-be3d-9e96f67cda66",
                    "line": "113",
                    "column": "",
                    "confidence": "MEDIUM",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "",
                    "details": "https://groups.google.com/g/rubyonrails-security/c/NOjKiGeXUgw Rails 6.0.0 has a vulnerability that may allow CSRF token forgery. Upgrade to Rails 6.0.3.1 or patch",
                    "securityTool": "Brakeman",
                    "language": "Ruby",
                    "severity": "MEDIUM",
                    "vulnHash": "02e71df1bf9dd7c4033c557aa54def78b333352bf6532465626aa170c23bc788",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109888282-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "04833b16-aca0-4da7-8d1b-387f09a77c8f",
                    "line": "7",
                    "column": "0",
                    "confidence": "HIGH",
                    "file": "python/example1/main.py",
                    "code": "6 \n7 exec(command)\n8 \n",
                    "details": "Use of exec detected.",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "MEDIUM",
                    "vulnHash": "8545b1ca94814504aad9822695e43bcb818c6b77ab293dd3eb7368f2b444c0c5",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109891344-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c6164ded-2fc6-4496-99d7-f7799169e799",
                    "line": "7",
                    "column": "0",
                    "confidence": "HIGH",
                    "file": "python/example2/main.py",
                    "code": "6 \n7 exec(command)\n8 \n",
                    "details": "Use of exec detected.",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "MEDIUM",
                    "vulnHash": "a0314d207b870e55cb52cc61a6a8c1d85f7598c5346d174dc2dc33364e57c391",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109891901-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "3dc0e40f-ba07-439c-95d4-4e47d461a56f",
                    "line": "26",
                    "column": "5",
                    "confidence": "LOW",
                    "file": "c/example1/test.cpp",
                    "code": "    char BOM[4] = {(char)0xEF, (char)0xBB, (char)0xBF, '\\0'}; /*BOM String*/",
                    "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
                    "securityTool": "Flawfinder",
                    "language": "C",
                    "severity": "MEDIUM",
                    "vulnHash": "97bed58508ca88d170cbd708da89ef9b0299bcbffde588ec9bb062c4076ad1ff",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109892448-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "0fc9add4-5502-4639-93fd-b7f6ef77afeb",
                    "line": "29",
                    "column": "9",
                    "confidence": "LOW",
                    "file": "c/example1/test.cpp",
                    "code": "    inf.open(\"test.xml\");",
                    "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
                    "securityTool": "Flawfinder",
                    "language": "C",
                    "severity": "MEDIUM",
                    "vulnHash": "6701800bf33ba7d30097d42b12d17d58b9039dee5e69512ba730192ae67f230f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10989302-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "3cd4a68c-ee2b-4fba-b34c-358d148181bc",
                    "line": "30",
                    "column": "10",
                    "confidence": "LOW",
                    "file": "c/example1/test.cpp",
                    "code": "    outf.open(\"test.xml\");",
                    "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
                    "securityTool": "Flawfinder",
                    "language": "C",
                    "severity": "MEDIUM",
                    "vulnHash": "d2563e3df2ebbfffbfdb5faaf7a6ccb0943d1e7add1c343f654582ddf252136b",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109893578-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "718aa513-1cd1-407c-b4ae-c54e70642126",
                    "line": "42",
                    "column": "9",
                    "confidence": "LOW",
                    "file": "c/example1/test.cpp",
                    "code": "    inf.open(\"test.xml\");",
                    "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
                    "securityTool": "Flawfinder",
                    "language": "C",
                    "severity": "MEDIUM",
                    "vulnHash": "a81bada84b133fe9f6f4d8d9fb825d092f44fe3a8849401b60e86565a2b2105e",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109894125-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "0b7cdf54-47c1-4c51-afc6-371af0b0ce9f",
                    "line": "43",
                    "column": "10",
                    "confidence": "LOW",
                    "file": "c/example1/test.cpp",
                    "code": "    outf.open(\"test.xml\");",
                    "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
                    "securityTool": "Flawfinder",
                    "language": "C",
                    "severity": "MEDIUM",
                    "vulnHash": "18f57f8a4a6178e0ce4187d1ce657e00119ae5b64eab4dc4bc5b437c1202d3c6",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109894677-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "de723824-53b3-4d1a-98d7-06e771208e7b",
                    "line": "55",
                    "column": "9",
                    "confidence": "LOW",
                    "file": "c/example1/test.cpp",
                    "code": "    inf.open(\"test.xml\");",
                    "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
                    "securityTool": "Flawfinder",
                    "language": "C",
                    "severity": "MEDIUM",
                    "vulnHash": "542c589bd0dcec41391ae978e69a66d88ba43ab26e42960e08c3c8c0eeb83d40",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109895228-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "cca6d9e3-87e4-4a05-8b1c-73b358da7cf8",
                    "line": "56",
                    "column": "10",
                    "confidence": "LOW",
                    "file": "c/example1/test.cpp",
                    "code": "    outf.open(\"test.xml\");",
                    "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
                    "securityTool": "Flawfinder",
                    "language": "C",
                    "severity": "MEDIUM",
                    "vulnHash": "0e717f69af9d6c91e54fc657cf02aa135f69e525a28de7d78b2f3ce583d60f21",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109895841-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "eb1b41e5-8f54-4b52-92c4-ca0effb157a9",
                    "line": "38",
                    "column": "7",
                    "confidence": "LOW",
                    "file": "go/example1/api/util/util.go",
                    "code": "\th := md5.New()",
                    "details": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n",
                    "securityTool": "Semgrep",
                    "language": "Go",
                    "severity": "MEDIUM",
                    "vulnHash": "4ec65bbf604a7e4abec68f3c6de04a3addb1572046cd056d21b83f6dc3bf46ee",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109896943-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "491eefca-b392-4112-b496-fa242552a2e9",
                    "line": "38",
                    "column": "7",
                    "confidence": "LOW",
                    "file": "go/example1/api/util/util.go",
                    "code": "\th := md5.New()",
                    "details": "Detected use of an insecure cryptographic hashing method. This method is known to be broken and easily compromised. Use SHA256 or SHA3 instead.",
                    "securityTool": "Semgrep",
                    "language": "Go",
                    "severity": "MEDIUM",
                    "vulnHash": "eced81ac594ee2c190ba11c4f6049be1d2068fd3d8575d7b506ae2881977da28",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109898052-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "9b5ae3a6-6c5b-4fb0-af79-62b4d602af4f",
                    "line": "31",
                    "column": "13",
                    "confidence": "LOW",
                    "file": "csharp/example1/NetCoreVulnerabilities/Vulnerabilities.cs",
                    "code": "rnd.NextBytes(buffer);",
                    "details": "Weak random number generator.\nIt is possible to predict the next numbers of a pseudo random generator. Use a cryptographically strong generator for security sensitive purposes. For more information, check the following url (https://security-code-scan.github.io/#SCS0005).",
                    "securityTool": "SecurityCodeScan",
                    "language": "C#",
                    "severity": "MEDIUM",
                    "vulnHash": "0725c1834aec1a2e002b6c10e6eb967bb63d622a6f7073f0ec4c28f0c7c35fea",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109830119-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "1ccb9327-ce65-47f8-8bca-5a07b09eb2e5",
                    "line": "10",
                    "column": "0",
                    "confidence": "LOW",
                    "file": "csharp/example1/NetCoreVulnerabilities/Vulnerabilities.cs",
                    "code": "public class NetCoreVulnerabilities : ControllerBase",
                    "details": "No return string concat in controller\nA potential Cross-Site Scripting (XSS) was found. The endpoint returns a variable from the client entry that has not been coded. Always encode untrusted input before output, regardless of validation or cleaning performed. https://docs.microsoft.com/en-us/aspnet/core/security/cross-site-scripting?view=aspnetcore-3.1. For more information checkout the CWE-79 (https://cwe.mitre.org/data/definitions/79.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "C#",
                    "severity": "LOW",
                    "vulnHash": "42ad22689ec17c257ca9670979a480cf3505b32361827951203b5d5ebb8e9541",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109831336-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "0047bd0d-e6f0-48f8-a877-7b31570851f9",
                    "line": "29",
                    "column": "22",
                    "confidence": "HIGH",
                    "file": "csharp/example1/NetCoreVulnerabilities/Vulnerabilities.cs",
                    "code": "var rnd = new Random();",
                    "details": "Weak Random Number Generator\nThe use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For more information access: (https://security-code-scan.github.io/#SCS0005) or (https://cwe.mitre.org/data/definitions/338.html).",
                    "securityTool": "HorusecEngine",
                    "language": "C#",
                    "severity": "LOW",
                    "vulnHash": "f27ee697954a46ff7df6dbe99d3c657fbefc1214102572b0e29608cbda3e34e2",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109839247-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "f3296222-ed85-47d9-a116-a1a4ba9c6c81",
                    "line": "62",
                    "column": "4",
                    "confidence": "HIGH",
                    "file": "javascript/example3/app.js",
                    "code": "secure: false,",
                    "details": "Creating cookies without the \"secure\" flag\nWhen a cookie is protected with the secure attribute set to true it will not be send by the browser over an unencrypted HTTP request and thus cannot be observed by an unauthorized person during a man-in-the-middle attack. It is recommended to use HTTPs everywhere so setting the secure flag to true should be the default behaviour when creating cookies. For more information checkout the OWASP A3:2017 (https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html) advisory.",
                    "securityTool": "HorusecEngine",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "b6cf89cf72dba9503d2343269eea56612f55c5ac979128f8a2efc77a2c85e399",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109857542-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "84c0bb6d-f673-496e-996f-e528f8ff05d9",
                    "line": "39",
                    "column": "2",
                    "confidence": "HIGH",
                    "file": "go/example1/api/util/util.go",
                    "code": ": \th := md5.New()\n39: \tio.WriteString(h, s) // #nohorus\n40: \tmd5Result := fmt.Sprintf(\"%x\", h.Sum(ni",
                    "details": "Errors unhandled.",
                    "securityTool": "GoSec",
                    "language": "Go",
                    "severity": "LOW",
                    "vulnHash": "c885cb1cae447c837167e705b55679643c95fdc216250f878e48ccb33543842e",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109862692-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6a1383a8-a7c4-4c11-ab44-b8ab41e519fc",
                    "line": "110",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "send",
                    "details": "Versions of `send` prior to 0.11.2 are affected by an information leakage vulnerability which may allow an attacker to enumerate paths on the server filesystem.\n",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "719cf855c15343eec620cf9ca43c0c2125538f20f940596fdc3ed620d79787f6",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109864417-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c7188827-8147-444f-9ba9-b33ae821bb98",
                    "line": "31",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "debug",
                    "details": "Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter. \n\nAs it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "93b4d9b9aeec210fb2662b0938ff2349519f18c05e3da97275c0f65236e99f61",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109865523-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "46f53c35-c32a-4c7f-9237-de26dd03aa64",
                    "line": "110",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "send",
                    "details": "Versions 0.8.3 and earlier of `send` are affected by a directory traversal vulnerability. When relying on the root option to restrict file access it may be possible for an application consumer to escape out of the restricted directory and access files in a similarly named directory. \n\nFor example, `static(_dirname + '/public')` would allow access to `_dirname + '/public-restricted'`.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "5c2b1325ca1f766a80b7eb2c4121cb3a0fe59288ec7e7269247eac24bd66d6f0",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10986608-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "2d6c0444-de5d-478f-a60f-d0c6fb2fa615",
                    "line": "121",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example1/package-lock.json",
                    "code": "serve-static",
                    "details": "Versions of `serve-static` prior to 1.6.5 ( or 1.7.x prior to 1.7.2 ) are affected by an open redirect vulnerability on some browsers when configured to mount at the root directory.\n\n\n## Proof of Concept\n\nA link to `http://example.com//www.google.com/%2e%2e` will redirect to `//www.google.com/%2e%2e`\n\nSome browsers will interpret this as `http://www.google.com/%2e%2e`, resulting in an external redirect.",
                    "securityTool": "NpmAudit",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "31040e375cf583697cd6fd324e8ffb5d228bfc3dace5f0c3e34c50662adb50cc",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109867901-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "ef460741-023a-4955-9f8a-d827c371cace",
                    "line": "148",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "send",
                    "details": "Versions 0.8.3 and earlier of `send` are affected by a directory traversal vulnerability. When relying on the root option to restrict file access it may be possible for an application consumer to escape out of the restricted directory and access files in a similarly named directory. \n\nFor example, `static(_dirname + '/public')` would allow access to `_dirname + '/public-restricted'`.",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "0531f57c3a119c897615f51d38072ad5f8224c7450900827d4316acf0df7136f",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109868521-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "ef42cbf2-e060-43cc-8231-70254c898648",
                    "line": "158",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "serve-static",
                    "details": "Versions of `serve-static` prior to 1.6.5 ( or 1.7.x prior to 1.7.2 ) are affected by an open redirect vulnerability on some browsers when configured to mount at the root directory.\n\n\n## Proof of Concept\n\nA link to `http://example.com//www.google.com/%2e%2e` will redirect to `//www.google.com/%2e%2e`\n\nSome browsers will interpret this as `http://www.google.com/%2e%2e`, resulting in an external redirect.",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "47adc42202062385884e38d767e5044cd594e21cefdd398050bbd183cb43952e",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109870754-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "9f80c2c4-b2e9-4d0b-adc8-da2c516b0aa5",
                    "line": "",
                    "column": "",
                    "confidence": "LOW",
                    "file": "javascript/example2/yarn.lock",
                    "code": "debug",
                    "details": "Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter. \n\nAs it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.",
                    "securityTool": "YarnAudit",
                    "language": "JavaScript",
                    "severity": "LOW",
                    "vulnHash": "447e2c95d49c5b5bce804bbd1032c92f0924211165f54df0414e0d8059ce10d9",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109874696-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "46117a7c-e4ae-4c16-9dfb-c57bc676dca7",
                    "line": "5",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "actionpack",
                    "details": "Possible Strong Parameters Bypass in ActionPack (actionpack - 6.0.0) upgrade to ~\u003e 5.2.4.3, \u003e= 6.0.3.1 (CVE-2020-8164 - https://groups.google.com/forum/#!topic/rubyonrails-security/f6ioe4sdpbY)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "c3af92c32ed5e6820f8df8220a441ae356dfaa386079b22d3d346a31864d38a2",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109875251-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "18dcc58e-b394-440f-ab00-5f7105071467",
                    "line": "5",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "actionpack",
                    "details": "Ability to forge per-form CSRF tokens given a global CSRF token (actionpack - 6.0.0) upgrade to ~\u003e 5.2.4.3, \u003e= 6.0.3.1 (CVE-2020-8166 - https://groups.google.com/forum/#!topic/rubyonrails-security/NOjKiGeXUgw)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "19db58b3c5e0010f16c3eecc6a8bd004388bda2c69d92da4d1a67a06d36735e8",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109875797-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "4cb0df1a-9b13-41cc-bfef-2a94c06c4e57",
                    "line": "17",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "actionview",
                    "details": "Possible XSS vulnerability in ActionView (actionview - 6.0.0) upgrade to ~\u003e 5.2.4, \u003e= 5.2.4.2, \u003e= 6.0.2.2 (CVE-2020-5267 - https://groups.google.com/forum/#!topic/rubyonrails-security/55reWMM_Pg8)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "9b20cdcd5e838e5eccf67acd524cba9476f25530bd64f6585c0f9b1f8e81b72e",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109876359-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "381a68d9-f370-4206-aa30-fb18fcaf8744",
                    "line": "17",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "actionview",
                    "details": "CSRF Vulnerability in rails-ujs (actionview - 6.0.0) upgrade to ~\u003e 5.2.4.3, \u003e= 6.0.3.1 (CVE-2020-8167 - https://groups.google.com/forum/#!topic/rubyonrails-security/x9DixQDG9a0)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "61da824e9e8031523fd844bf3016dc3ae2142f3ed00be5b2f8b5f30d998fb8d3",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10987691-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c508f2da-cceb-4d8b-b8c2-6a265fbd5ba0",
                    "line": "12",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "activestorage",
                    "details": "Circumvention of file size limits in ActiveStorage (activestorage - 6.0.0) upgrade to ~\u003e 5.2.4.3, \u003e= 6.0.3.1 (CVE-2020-8162 - https://groups.google.com/forum/#!topic/rubyonrails-security/PjU3946mreQ)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "15974da60c33a349cb6e0b1446a1061f9135837841beeb5f3d4b14d8e5d736d9",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109877526-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "5a120d31-22b8-4869-82b4-0fc50c010f86",
                    "line": "13",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "activesupport",
                    "details": "Potentially unintended unmarshalling of user-provided objects in MemCacheStore and RedisCacheStore (activesupport - 6.0.0) upgrade to ~\u003e 5.2.4.3, \u003e= 6.0.3.1 (CVE-2020-8165 - https://groups.google.com/forum/#!topic/rubyonrails-security/bv6fW4S0Y1c)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "558617e53ae083cac420c4317b6cc7f90b6ef494dfe1bbd29936292eabff0df9",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.10987864-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "7e17cf99-51af-45ee-9eef-7da61ae72503",
                    "line": "33",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "nokogiri",
                    "details": "Nokogiri gem, via libxslt, is affected by multiple vulnerabilities (nokogiri - 1.10.4) upgrade to \u003e= 1.10.5 (CVE-2019-13117 - https://github.com/sparklemotion/nokogiri/issues/1943)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "9173122ae73525066c794256bec573ae4a2bfdaa839a93cdc6d03936764bf9a7",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109882589-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "c5d2f5cb-745f-440f-9c21-5249b9ea4d58",
                    "line": "24",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "rack",
                    "details": "Possible information leak / session hijack vulnerability (rack - 2.0.7) upgrade to ~\u003e 1.6.12, \u003e= 2.0.8 (CVE-2019-16782 - https://github.com/rack/rack/security/advisories/GHSA-hrqr-hxpp-chr3)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "8e56f4fa23c4763221cf7d5ac1cd7a2426bb5af1bd489da0c0480d7b58903670",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109883145-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "b48acbb8-debc-4350-99aa-4f0cc08ab0dc",
                    "line": "24",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "rack",
                    "details": "Directory traversal in Rack::Directory app bundled with Rack (rack - 2.0.7) upgrade to ~\u003e 2.1.3, \u003e= 2.2.0 (CVE-2020-8161 - https://groups.google.com/forum/#!topic/ruby-security-ann/T4ZIsfRf2eA)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "53eeb71aa49c6223c2fb43a775c8fc29b31c83c7db298193b53e61348bd968a8",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109883713-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "ef0469b3-26d8-4559-a623-8c0f71df1f0c",
                    "line": "145",
                    "column": "",
                    "confidence": "LOW",
                    "file": "ruby/example1/Gemfile.lock",
                    "code": "rubyzip",
                    "details": "Denial of Service in rubyzip (\"zip bombs\") (rubyzip - 1.2.3) upgrade to \u003e= 1.3.0 (CVE-2019-16892 - https://github.com/rubyzip/rubyzip/pull/403)",
                    "securityTool": "BundlerAudit",
                    "language": "Ruby",
                    "severity": "LOW",
                    "vulnHash": "c355e4852caf19b5d41ccf5186519d7bb10ff01eb1ea0d921b6a33d2e6ca17b1",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109887081-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "00935a96-914a-4822-b8dc-5a3523ab9d3f",
                    "line": "1",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "python/example1/main.py",
                    "code": "1 secret = 'password123!'\n2 \n3 password = 'thisisnotapassword' #nohorus\n4 \n",
                    "details": "Possible hardcoded password: 'password123!'",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "LOW",
                    "vulnHash": "09992c1e88e735bb6f47e29d956f36b879e48b57fb93ee9626f8afa332a786f9",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109887634-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "24607957-d831-4fc4-95a7-a2a064ea28cf",
                    "line": "3",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "python/example1/main.py",
                    "code": "2 \n3 password = 'thisisnotapassword' #nohorus\n4 \n5 command = 'print \"this command is not secure!!\"'\n",
                    "details": "Possible hardcoded password: 'thisisnotapassword'",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "LOW",
                    "vulnHash": "8d7b38ec820a3fbf2d85a84ea9fbf103067026e24cb7d9f0f3d59cd956923c48",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109888855-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "0f0b78bf-b38f-43b2-b2ba-1530895977cf",
                    "line": "11",
                    "column": "0",
                    "confidence": "HIGH",
                    "file": "python/example1/main.py",
                    "code": "10 \n11 assert 2 + 2 == 5, \"Wrong!\"\n",
                    "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "LOW",
                    "vulnHash": "3eccf23ae0bdad4c90b39cd422a6f75fe16a63ef669c3d80be4e2a4141710b21",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.1098894-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "6d88a105-3d9b-492d-a114-392ed6ad3311",
                    "line": "1",
                    "column": "0",
                    "confidence": "HIGH",
                    "file": "python/example1/tests/test.py",
                    "code": "1 assert 2 + 3 == 6, \"Wrong!\"\n",
                    "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "LOW",
                    "vulnHash": "6b7ceb775eb8d77b3a4e907e3cfb1a6ec636afa49d57263c7401be5869150aea",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109890174-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "9d8314eb-4dc6-4103-af02-b4c51d510a53",
                    "line": "1",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "python/example2/main.py",
                    "code": "1 secret = 'password123!'\n2 \n3 password = 'thisisnotapassword' #nohusky\n4 \n",
                    "details": "Possible hardcoded password: 'password123!'",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "LOW",
                    "vulnHash": "5cb3cc2c5a22611c45f9c15c391b4b03b0fad4da1c7f869c90491904cf86c3fb",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109890731-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "32b92f09-2e6b-4a3a-95a2-29cf969436ba",
                    "line": "3",
                    "column": "0",
                    "confidence": "MEDIUM",
                    "file": "python/example2/main.py",
                    "code": "2 \n3 password = 'thisisnotapassword' #nohusky\n4 \n5 command = 'print \"this command is not secure!!\"'\n",
                    "details": "Possible hardcoded password: 'thisisnotapassword'",
                    "securityTool": "Bandit",
                    "language": "Python",
                    "severity": "LOW",
                    "vulnHash": "f1ed2fcd2f59e959acb4cf433ea12189deb89f89467d83911dab4bd319c2c523",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109899702-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "bb2d1218-0086-47fa-baab-513e7c268e42",
                    "line": "12",
                    "column": "",
                    "confidence": "HIGH",
                    "file": "/home/wilian/go/src/github.com/ZupIT/horusec/examples/csharp/example1/NetCoreVulnerabilities/NetCoreVulnerabilities.csproj",
                    "code": "\u003cPackageReference Include=\"HtmlSanitizer\" Version=\"4.0.217\"/\u003e",
                    "details": "A possible vulnerable dependency was found, please checkout the following url for more information (https://github.com/advisories/GHSA-8j9v-h2vp-2hhv).",
                    "securityTool": "DotnetCli",
                    "language": "C#",
                    "severity": "LOW",
                    "vulnHash": "5a057065ddf3de81b8e6d018b88f628595851a57ac8f70957dba7b7af2dd1e25",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109858093-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "707e1257-9102-4284-a940-2cbebae5652b",
                    "line": "9",
                    "column": "",
                    "confidence": "LOW",
                    "file": "elixir/example1/lib/built_with_elixir_web/router.ex",
                    "code": "",
                    "details": "Missing Content-Security-Policy",
                    "securityTool": "Sobelow",
                    "language": "Elixir",
                    "severity": "UNKNOWN",
                    "vulnHash": "4dbdd79fcd52794080b301e17c04204740377afb5ca6d09c629105858a52e1bb",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109858641-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "cbb43892-c155-400f-8356-ab91f35479d7",
                    "line": "0",
                    "column": "",
                    "confidence": "LOW",
                    "file": "elixir/example1/config/prod.exs",
                    "code": "",
                    "details": "HTTPS Not Enabled",
                    "securityTool": "Sobelow",
                    "language": "Elixir",
                    "severity": "UNKNOWN",
                    "vulnHash": "24fb312d7b896dfc11f4a34d5292dac05fd3a8bec998904003abbda2b8587f3c",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109859266-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "41cd0d8c-78ba-421d-86a0-8e57907e3ac0",
                    "line": "17",
                    "column": "",
                    "confidence": "LOW",
                    "file": "elixir/example1/lib/built_with_elixir_web/templates/layout/app.html.eex",
                    "code": "",
                    "details": "XSS",
                    "securityTool": "Sobelow",
                    "language": "Elixir",
                    "severity": "UNKNOWN",
                    "vulnHash": "49e33d79ad6466a84e2ebd67bca80d85d8d95b8fffa7f04c706b7f0212603f33",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109885916-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "621b7015-61fd-4251-8918-b6732e391ee6",
                    "line": "16",
                    "column": "",
                    "confidence": "LOW",
                    "file": "hcl/example1/main.tf",
                    "code": "code beetween line 16 and 20.",
                    "details": "CKV_AZURE_2 -\u003e [Ensure Azure managed disk has encryption enabled]",
                    "securityTool": "Checkov",
                    "language": "HCL",
                    "severity": "UNKNOWN",
                    "vulnHash": "2ad897a2977f3959b705d7fb616f0cbfd48fbb4b65a34bd650e27622e699b6f2",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            },
            {
                "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
                "analysisID": "2a073064-d509-4510-b270-a52c18bdd2f2",
                "createdAt": "2021-08-31T10:34:50.109886532-03:00",
                "vulnerabilities": {
                    "vulnerabilityID": "231aabef-d648-4da3-b3b6-800c34beb770",
                    "line": "16",
                    "column": "",
                    "confidence": "LOW",
                    "file": "hcl/example1/main.tf",
                    "code": "code beetween line 16 and 20.",
                    "details": "CKV_AZURE_93 -\u003e [Ensure that managed disks use a specific set of disk encryption sets for the customer-managed key encryption]",
                    "securityTool": "Checkov",
                    "language": "HCL",
                    "severity": "UNKNOWN",
                    "vulnHash": "bea1995f301623a79c3720283ea8f67732414307ef102166216f8062b8ea46da",
                    "type": "Vulnerability",
                    "commitAuthor": "-",
                    "commitEmail": "-",
                    "commitHash": "-",
                    "commitMessage": "-",
                    "commitDate": "-"
                }
            }
        ]
    },
    "repositoryName": "Register-API"
}