# Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: {{ include "deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: horusec-analytic
  name: {{ .Values.components.analytic.name }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.components.analytic.pod.autoscaling.enabled }}
  replicas: {{ .Values.components.analytic.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: horusec-analytic
  template:
    metadata:
      labels:
        app: horusec-analytic
    spec:
      {{- include "analytic.imagePullSecrets" . | nindent 6 -}}
      containers:
        - env:
          - name: HORUSEC_SWAGGER_HOST
            value: 0.0.0.0
          - name: HORUSEC_PORT
            value: {{ .Values.components.analytic.port.http | quote }}
          - name: HORUSEC_DATABASE_SQL_LOG_MODE
            value: {{ .Values.components.analytic.database.logMode | quote }}
          - name: HORUSEC_GRPC_AUTH_URL
            value: "auth.{{- .Release.Namespace -}}.svc.cluster.local:{{- .Values.components.auth.port.grpc }}"
          - name: HORUSEC_GRPC_USE_CERTS
            value: "false"
          - name: HORUSEC_BROKER_HOST
            value: {{ required "A valid global.broker.host is required!" .Values.global.broker.host }}
          - name: HORUSEC_BROKER_PORT
            value: {{ .Values.global.broker.port | quote }}
          - name: HORUSEC_BROKER_USERNAME
            valueFrom:
              secretKeyRef:
              {{- toYaml .Values.global.broker.user.secretKeyRef | nindent 16 }}
          - name: HORUSEC_BROKER_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- toYaml .Values.global.broker.password.secretKeyRef | nindent 16 }}
          - name: HORUSEC_DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
              {{- toYaml .Values.components.analytic.database.user.secretKeyRef | nindent 16 }}
          - name: HORUSEC_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
              {{- toYaml .Values.components.analytic.database.password.secretKeyRef | nindent 16 }}
          - name: HORUSEC_DATABASE_SQL_URI
            value: {{ include "analytic.database.uri" . }}
          - name: HORUSEC_JWT_SECRET_KEY
            valueFrom:
              secretKeyRef:
              {{- toYaml .Values.global.jwt.secretKeyRef | nindent 16 }}
          {{- if .Values.components.analytic.extraEnv }}
          # Extra environment variables
          {{- toYaml .Values.components.analytic.extraEnv | nindent 12 }}
          {{- end }}
          image: "{{ template "analytic.image" . }}"
          imagePullPolicy: {{ .Values.components.analytic.container.image.pullPolicy | quote }}
          name: horusec-analytic
          ports:
          {{- range $key, $value := .Values.components.analytic.port }}
            - containerPort: {{ $value }}
              name: {{ $key }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /analytic/health
              port: http
              scheme: HTTP
          {{- if .Values.components.analytic.container.livenessProbe }}
            failureThreshold: {{ .Values.components.analytic.container.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.components.analytic.container.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.components.analytic.container.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.components.analytic.container.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.components.analytic.container.livenessProbe.timeoutSeconds }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /analytic/health
              port: http
              scheme: HTTP
          {{- if .Values.components.analytic.container.readinessProbe }}
            failureThreshold: {{ .Values.components.analytic.container.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.components.analytic.container.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.components.analytic.container.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.components.analytic.container.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.components.analytic.container.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.components.analytic.container.resources }}
          resources: {{- toYaml .Values.components.analytic.container.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.components.analytic.container.securityContext.enabled }}
          securityContext: {{- omit .Values.components.analytic.container.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
      {{- if .Values.components.analytic.pod.securityContext.enabled }}
      securityContext: {{- omit .Values.components.analytic.pod.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: analytic
      terminationGracePeriodSeconds: 30
