package vulnerability

import (
	"github.com/ZupIT/horusec-platform/vulnerability/internal/entities/vulnerability"
	repositoriesVulnerability "github.com/ZupIT/horusec-platform/vulnerability/internal/repositories/vulnerability"
)

type IController interface {
	FindAllVulnerabilityByFilter(
		filter *vulnerability.FilterToFindAllVulnerabilities) (*vulnerability.FindVulnerabilities, error)
	UpdateVulnerability(entity *vulnerability.UpdateVulnerability) error
}

type Controller struct {
	repoVulnerability repositoriesVulnerability.IRepositoryVulnerability
}

func NewVulnerabilitiesController(repoVulnerability repositoriesVulnerability.IRepositoryVulnerability) IController {
	return &Controller{
		repoVulnerability: repoVulnerability,
	}
}

func (c *Controller) FindAllVulnerabilityByFilter(
	filter *vulnerability.FilterToFindAllVulnerabilities) (*vulnerability.FindVulnerabilities, error) {
	return c.repoVulnerability.FindAllVulnerabilitiesByFilter(filter)
}

func (c *Controller) UpdateVulnerability(entity *vulnerability.UpdateVulnerability) error {
	return c.repoVulnerability.UpdateVulnerability(entity)
}
