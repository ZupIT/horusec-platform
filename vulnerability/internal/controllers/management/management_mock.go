// Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package management

import (
	"github.com/stretchr/testify/mock"

	utilsMock "github.com/ZupIT/horusec-devkit/pkg/utils/mock"

	managementEntities "github.com/ZupIT/horusec-platform/vulnerability/internal/entities/management"
)

type Mock struct {
	mock.Mock
}

func (m *Mock) ListVulnerabilitiesByFile(_ *managementEntities.Filter) (*managementEntities.ResponseVulnerabilitiesByFile, error) {
	args := m.MethodCalled("ListVulnerabilitiesByFile")

	return args.Get(0).(*managementEntities.ResponseVulnerabilitiesByFile), utilsMock.ReturnNilOrError(args, 1)
}

func (m *Mock) ListVulnerableFiles(_ *managementEntities.Filter) (*managementEntities.ResponseFilesVulnerable, error) {
	args := m.MethodCalled("ListVulnerableFiles")

	return args.Get(0).(*managementEntities.ResponseFilesVulnerable), utilsMock.ReturnNilOrError(args, 1)
}

func (m *Mock) UpdateVulnerabilities(_ *managementEntities.UpdateData) error {
	args := m.MethodCalled("UpdateVulnerabilities")

	return utilsMock.ReturnNilOrError(args, 0)
}
