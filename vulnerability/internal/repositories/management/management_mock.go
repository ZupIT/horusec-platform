package management

import (
	"github.com/google/uuid"
	"github.com/stretchr/testify/mock"

	analysisEntities "github.com/ZupIT/horusec-devkit/pkg/entities/analysis"
	vulnerabilityEntities "github.com/ZupIT/horusec-devkit/pkg/entities/vulnerability"
	utilsMock "github.com/ZupIT/horusec-devkit/pkg/utils/mock"

	managementEntities "github.com/ZupIT/horusec-platform/vulnerability/internal/entities/management"
)

type Mock struct {
	mock.Mock
}

func (m *Mock) GetAllVulnerabilities(_ *managementEntities.Filter) (*managementEntities.Response, error) {
	args := m.MethodCalled("GetAllVulnerabilities")

	return args.Get(0).(*managementEntities.Response), utilsMock.ReturnNilOrError(args, 1)
}

func (m *Mock) GetVulnerability(_ uuid.UUID) (vuln *vulnerabilityEntities.Vulnerability, err error) {
	args := m.MethodCalled("GetVulnerability")

	return args.Get(0).(*vulnerabilityEntities.Vulnerability), utilsMock.ReturnNilOrError(args, 1)
}

func (m *Mock) UpdateVulnerability(_ *vulnerabilityEntities.Vulnerability) error {
	args := m.MethodCalled("UpdateVulnerability")

	return utilsMock.ReturnNilOrError(args, 0)
}

func (m *Mock) GetAnalysis(_ uuid.UUID) (analysis *analysisEntities.Analysis, err error) {
	args := m.MethodCalled("GetAnalysis")

	return args.Get(0).(*analysisEntities.Analysis), utilsMock.ReturnNilOrError(args, 1)
}
