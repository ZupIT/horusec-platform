// Copyright 2021 ZUP IT SERVICOS EM TECNOLOGIA E INOVACAO SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package management

import (
	validation "github.com/go-ozzo/ozzo-validation/v4"
	"github.com/google/uuid"

	"github.com/ZupIT/horusec-devkit/pkg/enums/severities"
	vulnerabilityEnums "github.com/ZupIT/horusec-devkit/pkg/enums/vulnerability"
)

type VulnerabilityData struct {
	VulnerabilityID uuid.UUID               `json:"vulnerabilityID"`
	Severity        severities.Severity     `json:"severity" example:"CRITICAL" enums:"CRITICAL, HIGH, MEDIUM, LOW, INFO"`
	Type            vulnerabilityEnums.Type `json:"type" example:"Vulnerability" enums:"Vulnerability, Risk Accepted, False Positive, Corrected"` //nolint:lll // notations
}

func (v *VulnerabilityData) Validate() error {
	return validation.ValidateStruct(v,
		validation.Field(&v.VulnerabilityID, validation.Required, validation.NotIn(uuid.Nil)),
		validation.Field(&v.Severity, validation.In(severities.Critical, severities.Unknown,
			severities.High, severities.Medium, severities.Low, severities.Info)),
		validation.Field(&v.Type, validation.In(vulnerabilityEnums.Vulnerability, vulnerabilityEnums.RiskAccepted,
			vulnerabilityEnums.FalsePositive, vulnerabilityEnums.Corrected)))
}

func (v *VulnerabilityData) SetVulnerabilityID(vulnerabilityID uuid.UUID) {
	v.VulnerabilityID = vulnerabilityID
}
