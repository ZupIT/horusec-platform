package management

import (
	validation "github.com/go-ozzo/ozzo-validation/v4"
	"github.com/google/uuid"

	"github.com/ZupIT/horusec-devkit/pkg/enums/severities"
	vulnerabilityEnums "github.com/ZupIT/horusec-devkit/pkg/enums/vulnerability"
)

type Data struct {
	VulnerabilityID uuid.UUID               `json:"vulnerabilityID" swaggerignore:"true"`
	Severity        severities.Severity     `json:"severity" example:"CRITICAL" enums:"CRITICAL, HIGH, MEDIUM, LOW, INFO"`
	Type            vulnerabilityEnums.Type `json:"type" example:"Vulnerability" enums:"Vulnerability, Risk Accepted, False Positive, Corrected"`
}

func (d *Data) Validate() error {
	return validation.ValidateStruct(d,
		validation.Field(&d.VulnerabilityID, validation.Required, validation.NotIn(uuid.Nil)),
		validation.Field(&d.Severity, validation.In(severities.Critical, severities.Unknown,
			severities.High, severities.Medium, severities.Low, severities.Info)),
		validation.Field(&d.Type, validation.In(vulnerabilityEnums.Vulnerability, vulnerabilityEnums.RiskAccepted,
			vulnerabilityEnums.FalsePositive, vulnerabilityEnums.Corrected)))
}

func (d *Data) SetVulnerabilityID(vulnerabilityID uuid.UUID) {
	d.VulnerabilityID = vulnerabilityID
}
