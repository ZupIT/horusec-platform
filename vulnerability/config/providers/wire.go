//+build wireinject

package providers

import (
	"github.com/google/wire"

	"github.com/ZupIT/horusec-devkit/pkg/services/broker"
	brokerConfig "github.com/ZupIT/horusec-devkit/pkg/services/broker/config"
	"github.com/ZupIT/horusec-devkit/pkg/services/database"
	databaseConfig "github.com/ZupIT/horusec-devkit/pkg/services/database/config"
	"github.com/ZupIT/horusec-devkit/pkg/services/grpc/auth"
	"github.com/ZupIT/horusec-devkit/pkg/services/grpc/auth/proto"
	routerHttp "github.com/ZupIT/horusec-devkit/pkg/services/http/router"
	"github.com/ZupIT/horusec-devkit/pkg/services/middlewares"

	"github.com/ZupIT/horusec-platform/vulnerability/config/cors"
	vulnerabilityController "github.com/ZupIT/horusec-platform/vulnerability/internal/controllers/management"
	"github.com/ZupIT/horusec-platform/vulnerability/internal/handlers/health"
	vulnerabilityHandler "github.com/ZupIT/horusec-platform/vulnerability/internal/handlers/management"
	vulnerabilityRepository "github.com/ZupIT/horusec-platform/vulnerability/internal/repositories/management"
	"github.com/ZupIT/horusec-platform/vulnerability/internal/router"
)

var devKitProviders = wire.NewSet(
	brokerConfig.NewBrokerConfig,
	broker.NewBroker,
	proto.NewAuthServiceClient,
	databaseConfig.NewDatabaseConfig,
	database.NewDatabaseReadAndWrite,
	auth.NewAuthGRPCConnection,
	routerHttp.NewHTTPRouter,
	middlewares.NewAuthzMiddleware,
)

var configProviders = wire.NewSet(
	cors.NewCorsConfig,
	router.NewHTTPRouter,
)

var repositoryProviders = wire.NewSet(
	vulnerabilityRepository.NewManagementRepository,
)

var controllerProviders = wire.NewSet(
	vulnerabilityController.NewManagementController,
)

var handlerProviders = wire.NewSet(
	health.NewHealthHandler,
	vulnerabilityHandler.NewManagementHandler,
)

func Initialize(_ string) (router.IRouter, error) {
	wire.Build(devKitProviders, configProviders, repositoryProviders, controllerProviders, handlerProviders)

	return &router.Router{}, nil
}
