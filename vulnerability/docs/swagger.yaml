definitions:
  entities.Response:
    properties:
      code:
        type: integer
      content:
        type: object
      status:
        type: string
    type: object
  vulnerability.FindVulnerabilities:
    properties:
      data:
        items:
          $ref: '#/definitions/vulnerability.Vulnerability'
        type: array
      totalItems:
        type: integer
    type: object
  vulnerability.UpdateVulnerability:
    properties:
      severity:
        enum:
        - CRITICAL
        - ' HIGH'
        - ' MEDIUM'
        - ' LOW'
        - ' INFO'
        example: CRITICAL
        type: string
      type:
        enum:
        - Vulnerability
        - ' Risk Accepted'
        - ' False Positive'
        - ' Corrected'
        example: Vulnerability
        type: string
    type: object
  vulnerability.Vulnerability:
    properties:
      code:
        example: '-----BEGIN RSA PRIVATE KEY-----'
        type: string
      column:
        example: "1"
        type: string
      commitAuthor:
        example: horusec
        type: string
      commitDate:
        example: "2021-12-30"
        type: string
      commitEmail:
        example: horusec@zup.com.br
        type: string
      commitHash:
        example: a21fa164c00a15f3e91f5ee6659cb6a793b39a8d
        type: string
      commitMessage:
        example: Initial commit
        type: string
      confidence:
        enum:
        - HIGH
        - MEDIUM
        - LOW
        example: HIGH
        type: string
      details:
        example: Asymmetric Private Key Found SSH and/or x.509 Cerficates among the
          files of your project, make sure you want this kind of information inside
          your Git repo, since it can be missused by someone with access to any kind
          of copy.  For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html)
          advisory.
        type: string
      file:
        example: /deployments/cert.pem
        type: string
      language:
        enum:
        - Go
        - C#
        - Dart
        - Ruby
        - Python
        - Java
        - Kotlin
        - Javascript
        - Typescript
        - Leaks
        - HCL
        - C
        - PHP
        - HTML
        - Generic
        - YAML
        - Elixir
        - Shell
        - Nginx
        example: Leaks
        type: string
      line:
        example: "1"
        type: string
      securityTool:
        enum:
        - HorusecEngine
        - GoSec
        - SecurityCodeScan
        - Brakeman
        - Safety
        - Bandit
        - NpmAudit
        - YarnAudit
        - GitLeaks
        - TfSec
        - Semgrep
        - Flawfinder
        - PhpCS
        - MixAudit
        - Sobelow
        - ShellCheck
        - BundlerAudit
        example: HorusecEngine
        type: string
      severity:
        enum:
        - CRITICAL
        - ' HIGH'
        - ' MEDIUM'
        - ' LOW'
        - ' INFO'
        example: CRITICAL
        type: string
      type:
        enum:
        - Vulnerability
        - ' Risk Accepted'
        - ' False Positive'
        - ' Corrected'
        example: Vulnerability
        type: string
      vulnHash:
        example: 8bcac7908eb950419537b91e19adc83ce2c9cbfdacf4f81157fdadfec11f7017
        type: string
      vulnerabilityID:
        example: 00000000-0000-0000-0000-000000000000
        type: string
    type: object
info:
  contact:
    email: horusec@zup.com.br
    name: Horusec
    url: https://github.com/ZupIT/horusec-platform
  description: Service responsible for managing vulnerabilities.
  termsOfService: http://swagger.io/terms/
  title: Horusec-Vulnerability
paths:
  /vulnerability/health:
    get:
      consumes:
      - application/json
      description: Check if Health of service it's OK!
      operationId: health
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
      tags:
      - Health
  /vulnerability/management/{vulnerabilityID}:
    patch:
      consumes:
      - application/json
      description: Update severity or type of one vulnerability
      operationId: update-vulnerability
      parameters:
      - description: vulnerabilityID of the vulnerability
        in: path
        name: vulnerabilityID
        required: true
        type: string
      - description: update vulnerability content info
        in: body
        name: UpdateVulnerability
        required: true
        schema:
          $ref: '#/definitions/vulnerability.UpdateVulnerability'
      produces:
      - application/json
      responses:
        "204":
          description: OK
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Vulnerabilities
  /vulnerability/management/{workspaceID}/{repositoryID}:
    get:
      consumes:
      - application/json
      description: Get all vulnerabilities data by repository
      operationId: get-all-vulnerabilities
      parameters:
      - description: repositoryID of the repository
        in: path
        name: repositoryID
        required: true
        type: string
      - description: page query string
        in: query
        name: page
        type: string
      - description: size query string
        in: query
        name: size
        type: string
      - description: vulnerability hash query string
        in: query
        name: vulnHash
        type: string
      - description: vulnerability type query string
        enum:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - INFO
        in: query
        name: vulnType
        type: string
      - description: vulnerability severity query string
        enum:
        - Vulnerability
        - Risk Accepted
        - False Positive
        - Corrected
        in: query
        name: vulnSeverity
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  $ref: '#/definitions/vulnerability.FindVulnerabilities'
              type: object
        "400":
          description: BAD REQUEST
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
        "500":
          description: INTERNAL SERVER ERROR
          schema:
            allOf:
            - $ref: '#/definitions/entities.Response'
            - properties:
                content:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Vulnerabilities
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Horusec-Authorization
    type: apiKey
swagger: "2.0"
